{% set name = "mamba" %}
{% set libmamba_version = "0.22.1" %}
{% set libmambapy_version = "0.22.1" %}
{% set mamba_version = "0.22.1" %}
{% set release = "2022.02.28" %}

package:
  name: mamba-split

source:
  url: https://github.com/mamba-org/mamba/archive/refs/tags/{{ release }}.tar.gz
  sha256: bde3a7b247590d74e7c5f8f1b5e7abae1511592c9fb9fd0696bf66c85aa8ee2d

build:
  number: 3

outputs:
  - name: libmamba
    version: {{ libmamba_version }}
    script: build_mamba.sh                       # [unix]
    build:
      run_exports:
        - {{ pin_subpackage('libmamba', max_pin='x.x') }}
      ignore_run_exports:
        - spdlog
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake {{cmake}}
        - ninja {{ninja}}
        - zlib {{ zlib }}
      host:
        - libsolv {{libsolv}}
        - libcurl
        - openssl
        - libarchive
        - nlohmann_json {{nlohmann_json}}
        - cpp-filesystem {{cpp_filesystem}}
        - reproc-cpp {{reproc_cpp}}
        - spdlog {{spdlog}}
        - yaml-cpp {{yaml_cpp}}
        - termcolor-cpp {{termcolor_cpp}}
        - cli11 {{cli11}}
        - libiconv {{libiconv}}                              # [unix]
        - zlib {{ zlib }}
    test:
      commands:
        - test -d ${PREFIX}/include/mamba  # [unix]
        - test -f ${PREFIX}/include/mamba/version.hpp  # [unix]
        - test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfig.cmake  # [unix]
        - test -f ${PREFIX}/lib/cmake/libmamba/libmambaConfigVersion.cmake  # [unix]
        - test -e ${PREFIX}/lib/libmamba${SHLIB_EXT}  # [unix]
        {% set libmamba_version_split = libmamba_version.split('.') %}
        - cat $PREFIX/include/mamba/version.hpp | grep "LIBMAMBA_VERSION_MAJOR {{ libmamba_version_split[0] }}"  # [unix]
        - cat $PREFIX/include/mamba/version.hpp | grep "LIBMAMBA_VERSION_MINOR {{ libmamba_version_split[1] }}"  # [unix]
        - cat $PREFIX/include/mamba/version.hpp | grep "LIBMAMBA_VERSION_PATCH {{ libmamba_version_split[2] }}"  # [unix]

  - name: libmambapy
    version: {{ libmambapy_version }}
    script: build_mamba.sh                       # [unix]
    build:
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      run_exports:
        - {{ pin_subpackage('libmambapy', max_pin='x.x') }}
      ignore_run_exports:
        - spdlog {{spdlog}}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake {{cmake}}
        - ninja {{ninja}}
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - pybind11 {{pybind11}}                              # [build_platform != target_platform]
        - pybind11-abi                           # [build_platform != target_platform]
        - zlib {{ zlib }}
      host:
        - python
        - pip
        - pybind11 {{pybind11}}
        - pybind11-abi
        - openssl
        - yaml-cpp {{yaml_cpp}}
        - spdlog {{spdlog}}
        - cpp-filesystem {{cpp_filesystem}}
        - termcolor-cpp {{termcolor_cpp}}
        - nlohmann_json {{nlohmann_json}}
        - {{ pin_subpackage('libmamba', exact=True) }}
        - zlib {{ zlib }}
      run:
        - python
        - {{ pin_subpackage('libmamba', exact=True) }}
    test:
      imports:
        - libmambapy
        - libmambapy.bindings
      commands:
        - python -c "import libmambapy._version; assert libmambapy._version.__version__ == '{{ libmambapy_version }}'"

  - name: mamba
    version: {{ mamba_version }}
    script: build_mamba.sh                       # [unix]
    build:
      string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
      entry_points:
        - mamba = mamba.mamba:main
    requirements:
      build:
        - python                              # [build_platform != target_platform]
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
      host:
        - python
        - pip
        - openssl
        - {{ pin_subpackage('libmambapy', exact=True) }}
      run:
        - python
        - conda 
        - {{ pin_subpackage('libmambapy', exact=True) }}
    test:
      imports:
        - mamba
      requires:
        - pip
      commands:
        - mamba --help
        - test -f ${PREFIX}/etc/profile.d/mamba.sh  # [linux]
        # these tests work when run on win, but for some reason not during conda build
        - mamba create -n test_py2 python=3.9 --dry-run   #[not s390x]
        - mamba install xtensor xsimd -c conda-forge --dry-run  #[not s390x]
        # for some reason tqdm doesn't have a proper colorama dependency so pip check fails
        # but that's completely unrelated to mamba
        - python -c "import mamba._version; assert mamba._version.__version__ == '{{ mamba_version }}'"
        - test -f ${PREFIX}/condabin/mamba  # [unix]

about:
  home: https://github.com/mamba-org/mamba
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - CPP_FILESYSTEM_LICENSE.txt
  license_family: BSD
  summary: A fast drop-in alternative to conda, using libsolv for dependency resolution
  description: A fast drop-in alternative to conda, using libsolv for dependency resolution
  dev_url: https://github.com/mamba-org/mamba

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
